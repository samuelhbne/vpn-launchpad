#!/bin/bash

DKVER=`docker -v 2>/dev/null|awk '{print $3}'`
if [ "$DKVER" = "" ]; then
	echo "Docker executable not found."
	echo "Abort."
	exit 255
fi

PXYIP="127.0.0.1"
CTNNAME=`docker ps|grep samuelhbne/proxy-| awk '{print $NF}'`

if [ "$CTNNAME" = "" ] || [ `docker ps| grep $CTNNAME|wc -l` -eq 0 ]; then
	echo "Local proxy is not running."
	exit
else
	echo "Local proxy $CTNNAME is running."
	echo
fi

case $CTNNAME in
	proxy-sslibev)
		VPSADDR=`docker inspect -f '{{(index (index .Config "Cmd") 1)}}' $CTNNAME`
		;;
	proxy-brook)
		VPSADDR=`docker inspect -f '{{(index (index .Config "Cmd") 6)}}' $CTNNAME|cut -d':' -f1`
		;;
	proxy-trojan)
		VPSADDR=`docker inspect -f '{{(index (index .Config "Cmd") 1)}}' $CTNNAME`
		;;
	proxy-v2ray)
		VPSADDR=`docker inspect -f '{{(index (index .Config "Cmd") 1)}}' $CTNNAME`
		;;
esac

SOCKSPORT=`docker inspect -f '{{(index (index .NetworkSettings.Ports "1080/tcp") 0).HostPort}}' $CTNNAME`
HTTPPORT=`docker inspect -f '{{(index (index .NetworkSettings.Ports "8123/tcp") 0).HostPort}}' $CTNNAME`
DNSPORT=`docker inspect -f '{{(index (index .NetworkSettings.Ports "53/udp") 0).HostPort}}' $CTNNAME`

echo "VPN sever address: $VPSADDR"
echo

echo "Checking SOCKS5 proxy on $PXYIP:$SOCKSPORT TCP ..."
echo "curl -sx socks5h://$PXYIP:$SOCKSPORT http://ifconfig.co"
IFADDR=`curl -sx socks5h://$PXYIP:$SOCKSPORT http://ifconfig.co`
echo "$IFADDR"
if [ "$IFADDR" = "$VPSADDR" ]; then
	echo -e "SOCKS5 proxy check passed."
else
	echo -e "SOCKS5 proxy check failed."
fi
echo

echo "Checking HTTP proxy on $PXYIP:$HTTPPORT TCP ..."
echo "curl -sx http://$PXYIP:$HTTPPORT http://ifconfig.co"
IFADDR=`curl -sx http://$PXYIP:$HTTPPORT http://ifconfig.co`
echo "$IFADDR"
if [ "$IFADDR" = "$VPSADDR" ]; then
	echo -e "HTTP proxy check passed."
else
	echo -e "HTTP proxy check failed."
fi
echo

echo "Checking DNS server on $PXYIP:$DNSPORT UDP ..."
echo "docker exec $CTNNAME dig +short @$PXYIP -p $DNSPORT twitter.com"
TWITTIP=`docker exec $CTNNAME dig +short @$PXYIP -p $DNSPORT twitter.com`
echo "$TWITTIP"

TWITTIP=`echo "$TWITTIP"|head -n1`
if [ "$TWITTIP" = "" ]; then
	echo "Failed"
else
	echo "Checking $TWITTIP IP owner ..."
	echo "docker exec $CTNNAME proxychains whois $TWITTIP|grep OrgId"
	ORGID=`docker exec $CTNNAME proxychains whois $TWITTIP|grep OrgId`
	echo "$ORGID"
	ORGID=`echo "$ORGID"|awk '{print $2}'|tr -d '\r\n'`
	if [ "$ORGID" = "TWITT" ]; then
		echo -e "DNS server check passed."
	else
		echo -e "DNS server check failed."
	fi
	echo
fi
echo "Done."
